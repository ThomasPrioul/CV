<Application x:Class="CV.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:local="clr-namespace:CV"
             xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style x:Key="IconButtonStyle" TargetType="Button">
                <Setter Property="Command" Value="shell:SystemCommands.ShowSystemMenuCommand" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Padding" Value="12 0 0 1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Rectangle x:Name="Image"
                                       Width="32"
                                       Height="18"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Fill="Red" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Image" Property="Opacity" Value="0.80" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Image" Property="Opacity" Value="0.70" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            </Style>

            <Style x:Key="SystemButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="18 9 17 10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <Border.Background>
                                    <SolidColorBrush Color="Transparent" />
                                </Border.Background>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.1" />
                                            <VisualTransition GeneratedDuration="0"
                                                              From="MouseOver"
                                                              To="Pressed" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{x:Static local:Colors.CoolGray1}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{x:Static local:Colors.CoolGray3}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="False">
                        <Setter Property="Foreground" Value="{x:Static local:Brushes.CoolGray5}" />
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MinimizeSystemButtonStyle"
                   BasedOn="{StaticResource SystemButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="shell:SystemCommands.MinimizeWindowCommand" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Line Width="10"
                                  Height="1"
                                  RenderOptions.EdgeMode="Aliased"
                                  SnapsToDevicePixels="True"
                                  Stretch="Uniform"
                                  Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  StrokeEndLineCap="Square"
                                  StrokeStartLineCap="Square"
                                  StrokeThickness="1"
                                  X2="10"
                                  Y1="6"
                                  Y2="6" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="Minimize" />-->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowStyle}" Value="{x:Static WindowStyle.ToolWindow}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MaximizeRestoreSystemButtonStyle"
                   BasedOn="{StaticResource SystemButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="shell:SystemCommands.MaximizeWindowCommand" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Rectangle Width="10"
                                       Height="10"
                                       SnapsToDevicePixels="True"
                                       Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                       StrokeThickness="1" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="17 9 18 10" />
                <!--<Setter Property="ToolTip" Value="Maximize" />-->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="{x:Static WindowState.Maximized}">
                        <Setter Property="Command" Value="shell:SystemCommands.RestoreWindowCommand" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Path Margin="-1 0 1 0"
                                          Data="M2,2 L2,0 10,0 10,8 8,8 8,10 0,10 0,2 8,2 8,8"
                                          RenderOptions.EdgeMode="Aliased"
                                          SnapsToDevicePixels="True"
                                          Stretch="Uniform"
                                          Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                          StrokeThickness="1" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="ToolTip" Value="Restore" />-->
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowStyle}" Value="{x:Static WindowStyle.ToolWindow}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CloseSystemButtonStyle"
                   BasedOn="{StaticResource SystemButtonStyle}"
                   TargetType="Button">
                <Setter Property="Command" Value="shell:SystemCommands.CloseWindowCommand" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Path Width="10"
                                  Height="10"
                                  ClipToBounds="True"
                                  Data="M0,0 L10,10 M0,10 L10,0"
                                  SnapsToDevicePixels="True"
                                  Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  StrokeLineJoin="Bevel"
                                  StrokeThickness="1" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="17 9 18 10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <Border.Background>
                                    <SolidColorBrush Color="Transparent" />
                                </Border.Background>
                                <TextElement.Foreground>
                                    <SolidColorBrush Color="{x:Static local:Colors.Carbon}" />
                                </TextElement.Foreground>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.1" />
                                            <VisualTransition GeneratedDuration="0"
                                                              From="MouseOver"
                                                              To="Pressed" />
                                            <VisualTransition GeneratedDuration="0"
                                                              From="Pressed"
                                                              To="MouseOver" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#EB2F2F" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#7C0000" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="Close" />-->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowStyle}" Value="{x:Static WindowStyle.ToolWindow}">
                        <Setter Property="Padding" Value="12 9 13 10" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="DefaultWindowTitleTemplate">
                <TextBlock Margin="0 1 0 0"
                           VerticalAlignment="Center"
                           FontSize="14"
                           FontWeight="Light"
                           LineHeight="14"
                           Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}"
                           TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="White" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="False">
                                    <Setter Property="Foreground" Value="{x:Static local:Brushes.CoolGray5}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DataTemplate>

            <Style x:Key="MainWindowStyle" TargetType="Window">
                <Setter Property="BorderBrush" Value="{x:Static local:Brushes.CoolGray11}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="./Fonts/Roboto/#Roboto Medium" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="360" />
                <Setter Property="MinWidth" Value="360" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Window">
                            <Border Name="Shell"
                                    Margin="{TemplateBinding Margin}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <DockPanel x:Name="GalacticBar"
                                               VerticalAlignment="Top"
                                               Background="Transparent">
                                        <StackPanel x:Name="SystemButtons"
                                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                    DockPanel.Dock="Right"
                                                    Orientation="Horizontal">
                                            <Button x:Name="PrintButton"
                                                    Command="ApplicationCommands.Print"
                                                    Style="{StaticResource SystemButtonStyle}">
                                                <fa:FontAwesome Icon="Solid_Print" />
                                            </Button>
                                            <Button x:Name="MinimizeButton" Style="{StaticResource MinimizeSystemButtonStyle}" />
                                            <Button x:Name="MaximizeButton" Style="{StaticResource MaximizeRestoreSystemButtonStyle}" />
                                            <Button x:Name="CloseButton" Style="{StaticResource CloseSystemButtonStyle}" />
                                        </StackPanel>
                                        <Button x:Name="IconButton"
                                                DockPanel.Dock="Left"
                                                Style="{StaticResource IconButtonStyle}">
                                            <Button.InputBindings>
                                                <MouseBinding Command="shell:SystemCommands.CloseWindowCommand" MouseAction="LeftDoubleClick" />
                                            </Button.InputBindings>
                                        </Button>
                                        <ContentPresenter Margin="12 0 0 0" ContentTemplate="{StaticResource DefaultWindowTitleTemplate}" />
                                    </DockPanel>
                                    <ContentPresenter />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ResizeMode" Value="CanMinimize">
                                    <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="ResizeMode" Value="NoResize">
                                    <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="WindowStyle" Value="{x:Static WindowStyle.ToolWindow}">
                                    <Setter TargetName="IconButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="local:WindowExtensions.UseSystemCommands" Value="True" />
                <Setter Property="shell:WindowChrome.WindowChrome">
                    <Setter.Value>
                        <shell:WindowChrome CaptionHeight="25"
                                            CornerRadius="0"
                                            GlassFrameThickness="0 1 0 0"
                                            ResizeBorderThickness="5" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="WindowStyle" Value="{x:Static WindowStyle.ToolWindow}">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="local:WindowExtensions.ShowIcon" Value="False" />
                    </Trigger>
                    <Trigger Property="IsActive" Value="False">
                        <Setter Property="BorderBrush" Value="{x:Static local:Brushes.Carbon}" />
                    </Trigger>
                    <Trigger Property="WindowState" Value="Maximized">
                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static shell:SystemParameters2.Current}, Path=WindowResizeBorderThickness}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CategoryTitleSeparator" TargetType="Separator">
                <Setter Property="Margin" Value="0 2 0 6" />
            </Style>

            <Style x:Key="CategoryTitle" TargetType="TextBlock" />
            <Style x:Key="CategorySubHeader" TargetType="TextBlock">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Margin" Value="0 4" />
            </Style>
            <Style x:Key="CategoryDescriptionText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="LineHeight" Value="16" />
                <!--<Setter Property="Foreground" Value="{x:Static local:Brushes.CoolGray5}" />-->
                <Setter Property="Margin" Value="0 0 0 4" />
                <Setter Property="Opacity" Value="0.6" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>
            <Style x:Key="EducationTextPane" TargetType="FrameworkElement">
                <Setter Property="Margin" Value="12 0 0 0" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>