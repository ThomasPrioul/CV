<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ProfileDescription" xml:space="preserve">
    <value>Ayant une expérience significative dans le milieu ferroviaire (réalisation de bancs de test, logiciels maintenance), ma compétence principale est le développement "full stack" en C# (7 ans quotidien).

Je suis aussi à l'aise en C et C++ (Qt &amp; QML).

Ayant un parcours académique en informatique industrielle, les problèmes d'informatique bas niveau et l'électronique m'intéressent également beaucoup.</value>
  </data>
  <data name="ProfileHeader" xml:space="preserve">
    <value>PROFIL</value>
  </data>
  <data name="ContactHeader" xml:space="preserve">
    <value>CONTACT</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>thomas.prioul@outlook.com</value>
  </data>
  <data name="MailToEmailAddress" xml:space="preserve">
    <value>mailto:thomas.prioul@outlook.com</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>06 35 91 42 86</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Ingénieur informatique industrielle</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>THOMAS PRIOUL</value>
  </data>
  <data name="ActivitiesHeader" xml:space="preserve">
    <value>CENTRES D'INTÉRÊT</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>26 ans - Français - Permis B</value>
  </data>
  <data name="ComputingActivityDescription" xml:space="preserve">
    <value>Infographisme 3D
Jeux vidéos et projets communautaires, compétitions</value>
  </data>
  <data name="MusicActivityDescription" xml:space="preserve">
    <value>Guitare - batterie</value>
  </data>
  <data name="ComputingActivityHeader" xml:space="preserve">
    <value>Informatique</value>
  </data>
  <data name="MusicActivityHeader" xml:space="preserve">
    <value>Musique</value>
  </data>
  <data name="EducationHeader" xml:space="preserve">
    <value>FORMATION</value>
  </data>
  <data name="PolytechEducationDescription" xml:space="preserve">
    <value>En alternance à Polytech Tours
Option véhicules autonomes
Major de la section informatique industrielle</value>
  </data>
  <data name="PolytechEducationHeader" xml:space="preserve">
    <value>Ingénieur informatique industrielle</value>
  </data>
  <data name="IUTEducationHeader" xml:space="preserve">
    <value>DUT GEII</value>
  </data>
  <data name="IUTEducationDescription" xml:space="preserve">
    <value>IUT GEII de Tours</value>
  </data>
  <data name="SkillsHeader" xml:space="preserve">
    <value>COMPÉTENCES</value>
  </data>
  <data name="ComputingSkillsDescription" xml:space="preserve">
    <value>Programmation de microcontrôleurs, DSP et FPGA
Réseaux informatiques, administration système Linux, systèmes d'exploitation
Applications pour PC et Linux embarqué (Qt, QML)
Modélisation UML, gestion de sources (git)
Support avec tickets (Redmine), développement agile (Azure DevOps, Jenkins, Docker)</value>
  </data>
  <data name="IndustrialComputingHeader" xml:space="preserve">
    <value>Informatique industrielle</value>
  </data>
  <data name="ElectronicsHeader" xml:space="preserve">
    <value>Électronique</value>
  </data>
  <data name="LanguageSkillsHeader" xml:space="preserve">
    <value>Langues</value>
  </data>
  <data name="ElectronicsSkillsDescription" xml:space="preserve">
    <value>Réalisation de prototypes, schémas et routage de carte</value>
  </data>
  <data name="EnglishSkillLevel" xml:space="preserve">
    <value>Anglais niveau C1/C2
TOEIC : 990</value>
  </data>
  <data name="ExperienceHeader" xml:space="preserve">
    <value>EXPÉRIENCE PROFESSIONNELLE</value>
  </data>
  <data name="ABCPortageJobTitle" xml:space="preserve">
    <value>Ingénieur informatique industrielle</value>
  </data>
  <data name="ABCPortageJobDescription" xml:space="preserve">
    <value>Support technique (C#, C++) sur projet de box CBM embarquée.

Logiciel supervision pour les trains NAT, Régio2N et RERNG (C#) :
 - Détections d'anomalies en temps réel, sur rame ou à distance
 - Retro-engineering de protocoles réseaux
 - Génération de rapports automatiques et retour d'expérience
 - Développeur principal : gestion, présentations, formation, documentation

Banc de test réseaux pour le train Régio2N (C#) :
 - Simulation de plusieurs réseaux en temps réel, réseaux sécuritaires
 - Simulation équipements SIL2 (FPGA, C)
 - Tests télédiagnostics, communication sol/bord (C#)

Simulateur de mission pour le train NAT (Île de France Mobilités) :
 - Simule le déplacement du train en temps réel
 - Connectable au banc de test pour valider le matériel du système info voyageurs</value>
  </data>
  <data name="SNCFJobTitle" xml:space="preserve">
    <value>Apprenti informatique industrielle</value>
  </data>
  <data name="SNCFJobDescription" xml:space="preserve">
    <value>Banc de test réseaux pour le train NAT :
 - Simulation d'équipements sur bus MVB (FPGA, NIOS II, C)
 - Simulation en temps réel d'équipements IP via un PC (C#)
 - Scripts de simulation (retranscription d'un fonctionnel câblé électrique)</value>
  </data>
  <data name="LinkedIn" xml:space="preserve">
    <value>https://www.linkedin.com/in/thomas-prioul/</value>
  </data>
</root>